# BIST AI Smart Trader - Production Docker Compose
version: '3.8'

services:
  bist-ai-trader:
    build: .
    container_name: bist-ai-trader
    ports:
      - "8001:8001"
    environment:
      - HOST=0.0.0.0
      - PORT=8001
      - DEBUG=false
      - LOG_LEVEL=INFO
      - TIMEGPT_API_KEY=${TIMEGPT_API_KEY}
      - FINNHUB_API_KEY=${FINNHUB_API_KEY}
      - FMP_API_KEY=${FMP_API_KEY}
    volumes:
      - ./models:/app/models
      - ./logs:/app/logs
      - ./snapshots:/app/snapshots
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - bist-network

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: bist-redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - bist-network

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: bist-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - bist-network

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: bist-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - bist-network

volumes:
  prometheus_data:
  grafana_data:

networks:
  bist-network:
    driver: bridge
